"""
–ó–∞–¥–∞–Ω–∏–µ 1
üìå –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å –º–µ—Ç–æ–¥–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –∏ –ø–ª–æ—â–∞–¥–∏
üìå –î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏
üìå –î–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —à–µ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
"""

class Rectangle:
    """
    –ö–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å –º–µ—Ç–æ–¥–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –∏ –ø–ª–æ—â–∞–¥–∏,
    –∞ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ –ø–ª–æ—â–∞–¥–∏.
    """
    def __init__(self, width: float, height: float):
        if width <= 0 or height <= 0:
            raise ValueError("–®–∏—Ä–∏–Ω–∞ –∏ –≤—ã—Å–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏")
        self.width = width
        self.height = height

    def perimeter(self) -> float:
        """–í—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return 2 * (self.width + self.height)

    def area(self) -> float:
        """–í—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return self.width * self.height

    # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ –ø–ª–æ—â–∞–¥–∏
    def __eq__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() == other.area()

    def __ne__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() != other.area()

    def __lt__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() < other.area()

    def __le__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() <= other.area()

    def __gt__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() > other.area()

    def __ge__(self, other) -> bool:
        if not isinstance(other, Rectangle):
            return NotImplemented
        return self.area() >= other.area()

    def __repr__(self) -> str:
        return f"Rectangle(width={self.width}, height={self.height})"

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    r1 = Rectangle(3, 4)
    r2 = Rectangle(2, 6)
    r3 = Rectangle(3, 4)
    print(f"r1 area: {r1.area()}, perimeter: {r1.perimeter()}")
    print(f"r2 area: {r2.area()}, perimeter: {r2.perimeter()}")
    print("r1 == r2?", r1 == r2)
    print("r1 != r2?", r1 != r2)
    print("r1 < r2?", r1 < r2)
    print("r1 <= r3?", r1 <= r3)
    print("r2 > r1?", r2 > r1)
    print("r2 >= r1?", r2 >= r1)
